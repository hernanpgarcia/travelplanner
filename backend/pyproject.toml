[tool.poetry]
name = "travelplanner-backend"
version = "0.1.0"
description = "TravelPlanner backend API"
authors = ["TravelPlanner Team <engineering@travelplanner.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
sqlalchemy = "^2.0.23"
alembic = "^1.12.1"
pydantic = {extras = ["email"], version = "^2.5.0"}
psycopg2-binary = "^2.9.9"
redis = "^5.0.1"
httpx = "^0.25.2"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-multipart = "^0.0.6"
structlog = "^23.2.0"
python-json-logger = "^2.0.7"
slowapi = "^0.1.9"
websockets = "^12.0"
aiofiles = "^23.2.1"
boto3 = "^1.34.0"
google-auth = "^2.23.4"
google-auth-oauthlib = "^1.1.0"
google-auth-httplib2 = "^0.1.1"
googlemaps = "^4.10.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
black = "^23.11.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.7.1"
pre-commit = "^3.5.0"
httpx = "^0.25.2"
factory-boy = "^3.3.0"
freezegun = "^1.2.2"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
    "-v"
]
asyncio_mode = "auto"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "googlemaps.*",
    "boto3.*",
    "botocore.*",
]
ignore_missing_imports = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"